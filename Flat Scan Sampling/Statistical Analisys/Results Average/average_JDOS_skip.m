clear
close

% Compute some useful things about the JDOS generated by CPP code
% João Inácio, 11 Nov. 2020

L = 8;
N_SPINS = L * L;
type = "Serial"; % Serial/Par

if L == 4
    skip_vals = [0 2 4 8 16 32 64 128 256];
    REP = 10000;
elseif L == 8
    skip_vals = [16 32 64 128 256];
    REP = 1000;
end

JDOS = cell(1000, length(skip_vals));
JDOS_average = cell(1, length(skip_vals));
JDOS_sum = cell(1, length(skip_vals));
data = cell(1000, length(skip_vals));
run_time = zeros(1000, length(skip_vals));

tic
parfor idx_skip = 1:length(skip_vals)
    skip = skip_vals(idx_skip);
    
    JDOS_sum{idx_skip} = zeros(N_SPINS + 1);
    JDOS_average{idx_skip} = zeros(N_SPINS + 1);
    
    for run = 1:1000
        file_name_1 = "Results skip/CPP Data " + type + "/" + L + "L/" + skip...
            + "/" + run + "_JDOS_2D_" + L + "L_10E" + log10(REP) + "_skip"...
            + skip + "_nRPS_CPP.txt";
        JDOS_imported = importdata(file_name_1);
        file_name_2 = "Results skip/CPP Data " + type + "/" + L + "L/" + skip...
            + "/" + run + "_JDOS_2D_" + L + "L_10E" + log10(REP) + "_skip"...
            + skip + "_nRPS_CPP_data.txt";
        data_imported = importdata(file_name_2);
        
        data{run, idx_skip} = data_imported.data(1:(N_SPINS / 2), :);
        run_time(run, idx_skip) = data_imported.data(N_SPINS/2 + 1, 1);
        
        JDOS{run, idx_skip} = JDOS_imported;
        JDOS_sum{idx_skip} = JDOS_sum{idx_skip} + JDOS_imported;
    end
    
    JDOS_average{idx_skip} = JDOS_sum{idx_skip} / run;
end
toc

skip = 16;
run = 1;

file_name_2 = "Results skip/CPP Data " + type + "/" + L + "L/" + skip...
            + "/" + run + "_JDOS_2D_" + L + "L_10E" + log10(REP) + "_skip"...
            + skip + "_nRPS_CPP_data.txt";
data_imported = importdata(file_name_2);

headers = data_imported.colheaders;

save("Results Average/skip/" + type + "_JDOS_2D_" + L + "L_10E" + log10(REP) + "_nRPS_CPP.mat", "JDOS",...
    "JDOS_average", "JDOS_sum", "data", "run_time", "headers")




